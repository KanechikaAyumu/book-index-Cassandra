/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.cassandra.avro;

@SuppressWarnings("all")
public class IndexClause extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"IndexClause\",\"namespace\":\"org.apache.cassandra.avro\",\"fields\":[{\"name\":\"expressions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"IndexExpression\",\"fields\":[{\"name\":\"column_name\",\"type\":\"bytes\"},{\"name\":\"op\",\"type\":{\"type\":\"enum\",\"name\":\"IndexOperator\",\"symbols\":[\"EQ\",\"GTE\",\"GT\",\"LTE\",\"LT\"]}},{\"name\":\"value\",\"type\":\"bytes\"}]}}},{\"name\":\"start_key\",\"type\":\"bytes\"},{\"name\":\"count\",\"type\":\"int\"}]}");
  public java.util.List<org.apache.cassandra.avro.IndexExpression> expressions;
  public java.nio.ByteBuffer start_key;
  public int count;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return expressions;
    case 1: return start_key;
    case 2: return count;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: expressions = (java.util.List<org.apache.cassandra.avro.IndexExpression>)value$; break;
    case 1: start_key = (java.nio.ByteBuffer)value$; break;
    case 2: count = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
