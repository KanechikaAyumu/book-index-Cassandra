/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.cassandra.avro;

@SuppressWarnings("all")
public class KeyRange extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"KeyRange\",\"namespace\":\"org.apache.cassandra.avro\",\"fields\":[{\"name\":\"start_key\",\"type\":[\"bytes\",\"null\"]},{\"name\":\"end_key\",\"type\":[\"bytes\",\"null\"]},{\"name\":\"start_token\",\"type\":[\"string\",\"null\"]},{\"name\":\"end_token\",\"type\":[\"string\",\"null\"]},{\"name\":\"count\",\"type\":\"int\"}]}");
  public java.nio.ByteBuffer start_key;
  public java.nio.ByteBuffer end_key;
  public java.lang.CharSequence start_token;
  public java.lang.CharSequence end_token;
  public int count;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return start_key;
    case 1: return end_key;
    case 2: return start_token;
    case 3: return end_token;
    case 4: return count;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: start_key = (java.nio.ByteBuffer)value$; break;
    case 1: end_key = (java.nio.ByteBuffer)value$; break;
    case 2: start_token = (java.lang.CharSequence)value$; break;
    case 3: end_token = (java.lang.CharSequence)value$; break;
    case 4: count = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
